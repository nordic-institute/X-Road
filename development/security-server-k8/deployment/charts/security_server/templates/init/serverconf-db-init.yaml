apiVersion: batch/v1
kind: Job
metadata:
  name: serverconf-db-init
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
        - name: serverconf-db-init
          image: {{ .Values.init.serverconf.image }}
          imagePullPolicy: Never
          resources:
            requests:
              memory: "128Mi"
            limits:
              memory: "512Mi"
          env:
            - name: DB_HOST
              value: {{ .Values.init.serverconf.host | quote }}
            - name: DB_PORT
              value: {{ .Values.init.serverconf.port | quote }}
            - name: DB_NAME
              value: {{ .Values.init.serverconf.database | quote }}
            - name: DB_USERNAME
              value: "postgres"
            - name: DB_PASSWORD
              value: {{ .Values.init.serverconf.password | quote }}
            - name: db_schema
              value: {{ .Values.init.serverconf.schema | quote }}
            - name: db_user #part of liquibase
              value: {{ .Values.init.serverconf.username | quote }}
      initContainers:
        - name: check-db-ready
          image: "postgres:17" #TODO make configurable?
          command: ['sh', '-c',
                    'until pg_isready -h db-serverconf.ss.svc.cluster.local -p 5432; do echo waiting for database; sleep 2; done;']
      restartPolicy: Never
