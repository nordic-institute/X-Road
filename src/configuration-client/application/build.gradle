plugins {
    alias(libs.plugins.quarkus)
//    id 'maven-publish'
}

// TODO xroad8 refactor to work without shadowjar
//publishing {
//    publications {
//        shadow(MavenPublication) { publication ->
//            project.shadow.component(publication)
//            groupId = 'org.niis.xroad'
//            artifactId = "configuration-client"
//            version = xroadVersion + ("RELEASE".equals(xroadBuildType) ? "": "-SNAPSHOT")
//        }
//    }
//    repositories {
//        maven {
//            url = xroadPublishUrl
//            credentials {
//                username = xroadPublishUser
//                password = xroadPublishApiKey
//            }
//            authentication {
//                basic(BasicAuthentication)
//            }
//        }
//    }
//}

dependencies {
    implementation(platform(libs.quarkus.bom))
    implementation(project(':common:common-quarkus-bootstrap'))

    implementation(libs.quarkus.springBoot.di)

    implementation project(':common:common-core')
    implementation project(':common:common-rpc')
    implementation project(':configuration-client:core')

//    testImplementation project(':common:common-test')
    testImplementation(libs.junit.system.exit)
    testImplementation("io.quarkus:quarkus-junit5:3.17.5")
}

jar.enabled = false

test {
    useJUnitPlatform()

    def junit5SystemExit = configurations.testRuntimeClasspath.files
        .find { it.name.contains('junit5-system-exit') }
    jvmArgumentProviders.add({["-javaagent:$junit5SystemExit"]} as CommandLineArgumentProvider)
}
