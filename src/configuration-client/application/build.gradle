plugins {
    alias(libs.plugins.shadow)
    id 'maven-publish'
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = 'org.niis.xroad'
            artifactId = "configuration-client"
            version = xroadVersion + ("RELEASE".equals(xroadBuildType) ? "": "-SNAPSHOT")
        }
    }
    repositories {
        maven {
            url = xroadPublishUrl
            credentials {
                username = xroadPublishUser
                password = xroadPublishApiKey
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

dependencies {
    implementation(platform(libs.springBoot.bom))

    implementation project(':common:common-core')
    implementation project(':configuration-client:core')

    implementation('org.springframework:spring-context')

    testImplementation project(':common:common-test')
}

ext {
    mainClassName = 'org.niis.xroad.confclient.ConfClientDaemonMain'
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

shadowJar {
    exclude('**/module-info.class')
    archiveClassifier = ''
    archiveBaseName = 'configuration-client'
    mergeServiceFiles()
}

jar.enabled = false

build {
    dependsOn shadowJar
}

tasks.register('runConfigurationClient', JavaExec) {
    jvmArgs '-Dxroad.conf.path=build/',
        '-Dxroad.distributedfiles.signatureFreshness=-1' // disable freshness checking since we read local file
    mainClass = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

