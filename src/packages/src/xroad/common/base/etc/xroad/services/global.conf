#!/bin/bash

# Please do not change this file! It will be overwritten by updates.
# System specific changes should be added to /etc/xroad/services/local.properties

ADDON_PATH="/usr/share/xroad/jlib/addon"

umask 0027

export LD_LIBRARY_PATH="/usr/share/xroad/lib:$LD_LIBRARY_PATH"

load_from_properties() {
  if [ -f /etc/xroad/services/local.properties ]; then
    while IFS='=' read -r key value; do
      if [ -n "$key" ] && [ -n "$value" ] && [[ $key != \#* ]]; then
        case $key in
        XROAD_*)
          printf -v "${key}" '%s' "${value}"
          ;;
        *)
          #ignored
          echo "WARNING: overriding $key ignored" >&2
          ;;
        esac
      fi
    done </etc/xroad/services/local.properties
  fi
}

# Applies modifications by local.conf, supporting legacy variables without XROAD_ prefix.
# Expects global variable name as an argument, e.g.
#   apply_local_conf XROAD_PROXY_PARAMS
apply_local_conf() {
  if [ -f /etc/xroad/services/local.conf ]; then
    local -r param_name="$1"
    local -r legacy_param_name="${param_name##XROAD_}"
    local -r default_params="${!param_name}"
    local -r default_addon_params="${XROAD_ADDON_PARAMS}"
    local ADDON_PARAMS="$XROAD_ADDON_PARAMS"
    local "$legacy_param_name"="$default_params"

    source /etc/xroad/services/local.conf

    if [[ "$default_params" != "${!legacy_param_name}" && "$default_params" == "${!param_name}" ]]; then
      declare -g "$param_name"="${!legacy_param_name}"
    fi

    if [[ "$default_addon_params" != "$ADDON_PARAMS" && "$default_addon_params" == "$XROAD_ADDON_PARAMS" ]]; then
      XROAD_ADDON_PARAMS="$ADDON_PARAMS"
    fi
  fi

  if [[ -n $JAVA_HOME ]]; then
    PATH="$JAVA_HOME/bin:$PATH"
    export JAVA_HOME
  fi
}

XROAD_PARAMS="-XX:+UseG1GC -Dfile.encoding=UTF-8 -Xshare:auto -Djdk.tls.ephemeralDHKeySize=2048 \
-Djavax.xml.accessExternalDTD=\"\" -Djavax.xml.accessExternalStylesheet=\"\" $XROAD_PARAMS"

get_deployment_type() {
  # Check for central server specific directories/files
  local detected_application_type
  if [ -f "/etc/xroad/services/centralserver-admin-service.conf" ]; then
    echo "cs"
  else
    echo "ss"
  fi
}

set_quarkus_profiles() {
  local deployment_type
  deployment_type=$(get_deployment_type)

  export XROAD_QUARKUS_PROFILES="native,${deployment_type}"
}

set_db_configuration_source_properties() {
  local deployment_type
  deployment_type=$(get_deployment_type)

  if [ "$deployment_type" = "ss" ]; then
    if [ -r /etc/xroad/db.properties ]; then
      get_db_prop() { crudini --get "/etc/xroad/db.properties" '' "$1" 2>/dev/null || echo -n ""; }

      local base_url
      local db_schema
      local jdbc_url
      base_url=$(get_db_prop 'xroad.db.serverconf.hibernate.connection.url')
      db_schema=$(get_db_prop 'xroad.db.serverconf.hibernate.hikari.dataSource.currentSchema')
      if [[ -n "$db_schema" ]]; then
          if [[ "$base_url" == *\?* ]]; then
              jdbc_url="${base_url}&currentSchema=${db_schema}"
          else
              jdbc_url="${base_url}?currentSchema=${db_schema}"
          fi
      else
          jdbc_url="$base_url"
      fi
      export DB_CONFIG_SOURCE_URL="$jdbc_url"
      export DB_CONFIG_SOURCE_USERNAME=$(get_db_prop 'xroad.db.serverconf.hibernate.connection.username')
      export DB_CONFIG_SOURCE_PASSWORD=$(get_db_prop 'xroad.db.serverconf.hibernate.connection.password')
    fi
  fi
}

if [ -f "/etc/xroad/services/secret-store-local.conf" ]; then
  source /etc/xroad/services/secret-store-local.conf
fi

load_from_properties
set_quarkus_profiles
set_db_configuration_source_properties
