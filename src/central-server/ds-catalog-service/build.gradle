plugins {
    alias(libs.plugins.springBoot)
}

configurations {
    configureEach {
        exclude group: 'org.eclipse.edc', module: 'jetty-core'
        exclude group: 'com.apicatalog', module: 'titanium-json-ld-jre8' //transient dep that creates errors
    }

}

dependencies {
    implementation(project(':common:common-service-bootstrap'))

    runtimeOnly libs.bundles.connector
    runtimeOnly(libs.edc.config.filesystem)
    runtimeOnly libs.edc.api.management
    runtimeOnly libs.edc.api.management.config
    runtimeOnly libs.edc.controlplane.core //default store impls, etc.
    runtimeOnly libs.edc.controlplane.services // aggregate services
    runtimeOnly libs.edc.dsp // protocol webhook
    runtimeOnly libs.bundles.dcp // DCP protocol impl
    runtimeOnly libs.edc.api.dsp.config // json-ld expansion
    runtimeOnly(libs.edc.vault.hashicorp)

    runtimeOnly(libs.bundles.sql.edc)

    implementation(libs.edc.spi.identity.did)
    implementation(libs.edc.fc.spi.crawler)
    implementation(libs.edc.fc.spi)
    runtimeOnly(libs.edc.fc.core)
    runtimeOnly(libs.edc.fc.api)

    implementation(project(":security-server:ds:extensions:control-plane:xroad-identity-and-trust"))
    implementation(project(":security-server:ds:extensions:common:xroad-jws-signer"))
    implementation(project(":security-server:ds:extensions:common:xroad-webserver"))
    implementation(project(":security-server:ds:extensions:common:xroad-httpclient"))
    implementation(project(":security-server:ds:extensions:common:xroad-spring-bridge"))

    testImplementation libs.edc.junit
    testImplementation(project(':common:common-test'))
    testImplementation('org.springframework:spring-test:6.1.12')
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveBaseName = 'ds-catalog-service'
    manifest {
        attributes(
            'Implementation-Title': 'X-Road DS Catalog Service',
            'Implementation-Version': "$xroadVersion-$xroadBuildType",
        )
    }
}
