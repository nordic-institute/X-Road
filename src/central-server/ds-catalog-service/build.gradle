plugins {
    id("java")
    id("application")
    alias(libs.plugins.shadow)
}

configurations {
    sqlDependencies

    configureEach {
        exclude group: 'org.eclipse.edc', module: 'jetty-core'
        exclude group: 'com.apicatalog', module: 'titanium-json-ld-jre8' //transient dep that creates errors
    }

}

dependencies {
    runtimeOnly libs.bundles.connector
    runtimeOnly(libs.edc.config.filesystem)
    runtimeOnly libs.edc.api.management
    runtimeOnly libs.edc.api.management.config
    runtimeOnly libs.edc.controlplane.core //default store impls, etc.
    runtimeOnly libs.edc.controlplane.services // aggregate services
    runtimeOnly libs.edc.dsp // protocol webhook
    runtimeOnly libs.bundles.dcp // DCP protocol impl
    runtimeOnly libs.edc.api.dsp.config // json-ld expansion

    runtimeOnly(libs.edc.vault.hashicorp)
    runtimeOnly(libs.bundles.sql.edc)

    implementation(libs.edc.spi.identity.did)
    implementation(libs.edc.fc.spi.crawler)
    implementation(libs.edc.fc.spi)
    runtimeOnly(libs.edc.fc.core)
    runtimeOnly(libs.edc.fc.api)

    implementation(project(":security-server:edc:extensions:common:xroad-conf"))
    implementation(project(":security-server:edc:extensions:control-plane:xroad-identity-and-trust"))
    implementation(project(":security-server:edc:extensions:common:xroad-webserver"))

    testImplementation libs.edc.junit
    testImplementation(project(':common:common-test')) {
        exclude group: 'org.eclipse.jetty'
    }
    testImplementation('org.springframework:spring-test:6.1.12')
}

application {
    mainClass.set("org.eclipse.edc.boot.system.runtime.BaseRuntime")
}


var distTar = tasks.named("distTar")
var distZip = tasks.named("distZip")

shadowJar {
    mergeServiceFiles()
    archiveFileName.set("ds-catalog-service.jar")
    dependsOn(distTar, distZip)
}

