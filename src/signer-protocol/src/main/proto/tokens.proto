/*
 * The MIT License
 * Copyright (c) 2019- Nordic Institute for Interoperability Solutions (NIIS)
 * Copyright (c) 2018 Estonian Information System Authority (RIA),
 * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)
 * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
syntax = "proto3";

import "common_messages.proto";
import "token_status_info.proto";

option java_multiple_files = true;
option java_package = "ee.ria.xroad.signer.protocol.dto";

message TokenInfoProto {
  string type = 1;
  optional string friendly_name = 2;
  string id = 3;
  bool read_only = 4;
  bool available = 5;
  bool active = 6;
  optional string serial_number = 7;
  optional string label = 8;
  int32 slot_index = 9;
  TokenStatusInfo status = 10;
  repeated KeyInfoProto key_info = 11;
  map<string, string> token_info = 12;
}

message TokenInfoAndKeyIdProto {
  TokenInfoProto token_info = 1;
  string key_id = 2;
}

message KeyInfoProto {
  bool available = 1;
  KeyUsageInfo usage = 2;
  optional string friendly_name = 3;
  string id = 4;
  optional string label = 5;
  string public_key = 6;
  repeated CertificateInfoProto certs = 7;
  repeated CertRequestInfoProto cert_requests = 8;
  string sign_mechanism_name = 9;
}

message CertificateInfoProto {
  optional ClientIdProto member_id = 1;
  bool active = 2;
  bool saved_to_configuration = 3;
  string status = 4;
  string id = 5;
  bytes certificate_bytes = 6;
  bytes ocsp_bytes = 7;
  // Add other fields as needed
}

message CertRequestInfoProto {
  string id = 1;
  optional ClientIdProto member_id = 2;
  string subject_name = 3;
  string subject_alt_name = 4;
  optional string certificate_profile = 5;
  // Add other fields as needed
}

/* Key usage can either be signing or authentication. */
enum KeyUsageInfo {
  KEY_USAGE_UNSPECIFIED = 0;
  SIGNING = 1;
  AUTHENTICATION = 2;
}
