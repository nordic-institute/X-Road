plugins {
    id 'java-library'
}

configurations {
    schema
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', layout.buildDirectory.dir("generated-sources")]
        resources.srcDirs = ['src/main/resources']
    }
}

dependencies {
    api project(':common:common-db')

    implementation project(':common:common-util')
    implementation project(':common:common-verifier')

    // DB layer tests use HSQLDB with in-memory tables
    testImplementation "org.hsqldb:hsqldb:$hsqldbVersion"
    testImplementation project(':common:common-db')
    testImplementation project(':common:common-test')
    testImplementation "org.hibernate:hibernate-hikaricp:$hibernateVersion"

    schema project(':common:common-util')
    schema "org.apache.ant:ant:1.10.11"
    schema "org.hibernate:hibernate-hikaricp:$hibernateVersion"
    schema "org.hibernate.tool:hibernate-tools-ant:$hibernateVersion"
    schema 'commons-collections:commons-collections:3.2.2'
    schema "ch.qos.logback:logback-classic:${logbackVersion}"
    schema "org.hsqldb:hsqldb:$hsqldbVersion"
}

tasks.register('schemaExport') {
    dependsOn configurations.schema
    doLast {
        ant.taskdef(name: 'schemaExport', classname: 'org.hibernate.tool.ant.HibernateToolTask', classpath: configurations.schema.asPath)

        ant.schemaExport(destdir: "build") {
            configuration(
                configurationfile: 'src/main/resources/serverconf.hibernate.cfg.xml',
                propertyFile: 'src/test/resources/hibernate-schema.properties'
            )
            hbm2ddl(
                export: false,
                outputfilename: 'schema-export.sql',
                delimiter: ';',
                format: 'true')
            classpath {
                pathelement(path: configurations.schema.asPath)
                pathelement(path: 'src/main/resources')
                pathelement(path: 'src/test/resources')
                pathelement(path: "${layout.buildDirectory.get().asFile}/classes/java/main")
            }
        }
    }
}

tasks.register('runServerConfCRUDTest', JavaExec) {
    jvmArgs '-Dlogback.configurationFile=src/test/resources/logback-crudtest.xml'
    mainClass = 'ee.ria.xroad.proxy.conf.ServerConfCRUDTest'
    classpath = sourceSets.test.runtimeClasspath
    standardInput = System.in;
}

schemaExport.dependsOn compileJava
