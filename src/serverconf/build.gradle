plugins {
    id 'java-library'
}

configurations {
    schema
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', layout.buildDirectory.dir("generated-sources")]
        resources.srcDirs = ['src/main/resources']
    }
}

dependencies {
    api(project(':common:common-db'))

    implementation(project(':common:common-domain'))
    implementation(project(':common:common-verifier'))

    // DB layer tests use HSQLDB with in-memory tables
    testImplementation(libs.hsqldb)
    testImplementation(project(':common:common-db'))
    testImplementation(project(':common:common-test'))
    testImplementation(libs.hibernate.hikaricp)

    schema(project(':common:common-domain'))
    schema(libs.apache.ant)
    schema(libs.hibernate.hikaricp)
    schema(libs.hibernate.toolsAnt)
    schema(libs.commons.collections)
    schema(libs.logback.classic)
    schema(libs.hsqldb)
}

tasks.register('schemaExport') {
    dependsOn configurations.schema
    doLast {
        ant.taskdef(name: 'schemaExport', classname: 'org.hibernate.tool.ant.HibernateToolTask', classpath: configurations.schema.asPath)

        ant.schemaExport(destdir: "build") {
            configuration(
                configurationfile: 'src/main/resources/serverconf.hibernate.cfg.xml',
                propertyFile: 'src/test/resources/hibernate-schema.properties'
            )
            hbm2ddl(
                export: false,
                outputfilename: 'schema-export.sql',
                delimiter: ';',
                format: 'true')
            classpath {
                pathelement(path: configurations.schema.asPath)
                pathelement(path: 'src/main/resources')
                pathelement(path: 'src/test/resources')
                pathelement(path: "${layout.buildDirectory.get().asFile}/classes/java/main")
            }
        }
    }
}

tasks.register('runServerConfCRUDTest', JavaExec) {
    jvmArgs '-Dlogback.configurationFile=src/test/resources/logback-crudtest.xml'
    mainClass = 'ee.ria.xroad.proxy.conf.ServerConfCRUDTest'
    classpath = sourceSets.test.runtimeClasspath
    standardInput = System.in;
}

schemaExport.dependsOn compileJava
