project.ext.schemaTargetDir = layout.buildDirectory.dir("generated-sources").get().asFile
testJar.enabled = true

sourceSets {
    main {
        java.srcDirs = ["src/main/java", schemaTargetDir]
        resources.srcDirs = ['src/main/resources']
    }
}

configurations {
    xjc
}

dependencies {
    implementation project(':common:common-util')
    testImplementation project(':common:common-test')
    xjc "org.glassfish.jaxb:jaxb-runtime:$jaxbVersion"
    xjc "org.glassfish.jaxb:jaxb-xjc:$jaxbVersion"
}

tasks.register('createDirs') {
    doLast {
        project.ext.schemaTargetDir.mkdirs()
    }
}

tasks.register('xjc') {
    dependsOn ':common:common-util:xjc'
    inputs.files fileTree(dir: 'src/main/resources', include: '*.xsd')
    outputs.dir project.ext.schemaTargetDir

    doLast {
        ant.taskdef(name: 'xjc',
            classname: 'com.sun.tools.xjc.XJCTask',
            classpath: configurations.xjc.asPath)
        ant.xjc(
            destdir: project.ext.schemaTargetDir,
            package: 'ee.ria.xroad.common.conf.globalconf.ocspnextupdateparameters',
            schema: 'src/main/resources/ocsp-nextupdate-conf.xsd'
        )
        ant.xjc(
            destdir: project.ext.schemaTargetDir,
            package: 'ee.ria.xroad.common.conf.globalconf.ocspfetchintervalparameters',
            schema: 'src/main/resources/ocsp-fetchinterval-conf.xsd'
        )
    }
}

xjc.dependsOn createDirs
xjc.dependsOn processResources
xjc.mustRunAfter processResources

compileJava.dependsOn xjc
compileJava.dependsOn processResources
