plugins {
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
}

base {
    archivesName = 'proxy-ui-api'
}

configurations {
    dist {
        canBeConsumed = false
        canBeResolved = true
    }
}

configurations.configureEach {
    exclude(module: 'jetty-jakarta-servlet-api')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    dist(project(path: ":security-server:admin-service:ui", configuration: "dist"))

    implementation project(":common:common-globalconf")
    implementation project(":signer-protocol")
    implementation project(":serverconf")
    implementation project(":common:common-admin-api")
    implementation project(":common:common-management-request")
    implementation project(':common:common-api-throttling')
    implementation project(":common:common-verifier")
    implementation project(":security-server:openapi-model")

    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("io.micrometer:micrometer-tracing-bridge-brave")
    implementation("org.kohsuke:libpam4j:$libpam4jVersion")
    implementation("org.apache.commons:commons-compress:$commonsCompressVersion")
    implementation("wsdl4j:wsdl4j:$wsdl4jVersion")
    implementation("com.github.vladimir-bukhtoyarov:bucket4j-core:$bucket4jVersion")
    implementation("io.swagger.parser.v3:swagger-parser-v3:$swaggerParserVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation 'ch.qos.logback:logback-access:1.4.14'

    testImplementation project(":common:common-test")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("org.hsqldb:hsqldb:$hsqldbVersion")
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
    testImplementation(testFixtures(project(":common:common-api-throttling")))
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
}

tasks.register('copyUi', ProcessResources) {
    dependsOn(configurations.dist)
    from configurations.dist
    into layout.buildDirectory.dir("admin-service/ui/public")
}

bootRun {
    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
    if (project.hasProperty('args')) {
        def params = project.args.tokenize(',')
        args = params
    }
}

jar {
    enabled = false
}

bootJar {
    enabled = true

    dependsOn copyUi
    classpath += layout.buildDirectory.dir("admin-service/ui")

    manifest {
        attributes(
            'Implementation-Title': 'X-Road Security Server Admin Service',
            'Implementation-Version': "$xroadVersion-$xroadBuildType"
        )
    }
}

tasks.register('copyDeps', Copy) {
    into layout.buildDirectory.dir("unpacked-libs")
    from configurations.runtimeClasspath.find { it.name.startsWith("postgresql") }
}

assemble.dependsOn copyDeps

test {
    useJUnitPlatform()
    maxHeapSize = "1g"
}
