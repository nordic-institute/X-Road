<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.29.xsd">

    <changeSet id="create-keyconf_devices-table" author="niis">
        <createTable tableName="keyconf_devices">
            <column name="id" type="BIGSERIAL" remarks="Primary key for the device entry.">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="device_id" type="VARCHAR(255)"
                    remarks="Identifier used to refer to this device in APIs.">
                 <constraints nullable="false" unique="true"/>
            </column>
            <column name="device_type" type="VARCHAR(255)"
                    remarks="Pointer to the device type configuration.">
                <constraints nullable="false"/>
            </column>
            <column name="friendly_name" type="VARCHAR(255)"
                    remarks="Name that is displayed in UI."/>
            <column name="token_id" type="VARCHAR(255)"
                    remarks="Id of the token (serial number)."/>
            <column name="slot_id" type="VARCHAR(255)"
                    remarks="Id of the slot (label)."/>
            <column name="pin_index" type="INT" defaultValueNumeric="1"
                    remarks="Pin index (in case slot id does not identify the correct token)."/>
            <column name="sign_mechanism_name" type="VARCHAR(255)"
                    remarks="Signing (PKCS#11) mechanism name."/>
        </createTable>
    </changeSet>

    <changeSet id="create-keyconf_keys-table" author="niis">
        <createTable tableName="keyconf_keys">
             <column name="id" type="BIGSERIAL" remarks="Primary key for the key entry.">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="key_id" type="VARCHAR(255)"
                    remarks="Unique identifier for the key.">
                 <constraints nullable="false" unique="true"/>
            </column>
            <column name="device_id" type="BIGINT"
                    remarks="Foreign key referencing the keyconf_devices table.">
                <constraints nullable="false"/>
            </column>
            <column name="friendly_name" type="VARCHAR(1024)"
                    remarks="Name that is displayed in UI.">
                 <constraints nullable="false"/>
            </column>
            <column name="label" type="VARCHAR(1024)"
                    remarks="Label of the key."/>
            <column name="public_key" type="VARCHAR(4096)"
                    remarks="Base64 encoded public key corresponding to the private key."/>
            <column name="private_key" type="BYTEA"
                    remarks="Encrypted PKCS#12 key store containing the private key."/>
            <column name="sign_mechanism_name" type="VARCHAR(255)"
                    remarks="Signing (PKCS#11) mechanism name."/>
            <column name="usage" type="VARCHAR(255)"
                    remarks="Usage type of the key (e.g., SIGNING, AUTHENTICATION)."/>
        </createTable>
    </changeSet>

    <changeSet id="add-fk-keyconf_keys-to-devices" author="niis">
        <addForeignKeyConstraint baseColumnNames="device_id"
                                 baseTableName="keyconf_keys"
                                 constraintName="fk_key_device"
                                 referencedColumnNames="id"
                                 referencedTableName="keyconf_devices"
                                 onDelete="CASCADE"/>
    </changeSet>

    <changeSet id="create-keyconf_certificates-table" author="niis">
        <createTable tableName="keyconf_certificates">
             <column name="id" type="BIGSERIAL" remarks="Primary key for the certificate entry.">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="cert_id" type="VARCHAR(255)"
                    remarks="Identifier for the certificate.">
                  <constraints nullable="true" unique="true"/>
             </column>
            <column name="key_id" type="BIGINT"
                    remarks="Foreign key referencing the keyconf_keys table.">
                <constraints nullable="false"/>
            </column>
            <column name="member_id" type="BIGINT" remarks="Foreign key referencing the identifier table (ClientIdEntity).">
                 <constraints nullable="true" foreignKeyName="fk_cert_member" references="identifier(id)"/>
            </column>
            <column name="contents" type="BYTEA" remarks="Raw certificate data.">
                <constraints nullable="false"/>
            </column>
            <column name="status" type="VARCHAR(255)" remarks="Current status of the certificate (e.g., SAVED, REGISTERED)."/>
            <column name="next_renewal_time" type="TIMESTAMP" remarks="Recommended time by the CA for renewing the certificate."/>
            <column name="renewed_cert_hash" type="VARCHAR(255)" remarks="Hash of newer cert version in registration process."/>
            <column name="renewal_error" type="TEXT" remarks="Error message from automatic renewal process."/>
            <column name="ocsp_verify_error" type="TEXT" remarks="Error message from OCSP verification before activation."/>
            <column name="active" type="BOOLEAN" defaultValueBoolean="true" remarks="Whether this certificate can be used by the proxy.">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="add-fk-keyconf_certificates-to-keys" author="niis">
        <addForeignKeyConstraint baseColumnNames="key_id"
                                 baseTableName="keyconf_certificates"
                                 constraintName="fk_cert_key"
                                 referencedColumnNames="id"
                                 referencedTableName="keyconf_keys"
                                 onDelete="CASCADE"/>
    </changeSet>

    <changeSet id="create-keyconf_cert_requests-table" author="niis">
        <createTable tableName="keyconf_cert_requests">
             <column name="id" type="BIGSERIAL" remarks="Primary key for the certificate request entry.">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="cert_request_id" type="VARCHAR(255)"
                    remarks="Identifier for the certificate request.">
                 <constraints nullable="true" unique="true"/>
            </column>
            <column name="key_id" type="BIGINT"
                    remarks="Foreign key referencing the keyconf_keys table.">
                <constraints nullable="false"/>
            </column>
            <column name="member_id" type="BIGINT" remarks="Foreign key referencing the identifier table (ClientIdEntity).">
                 <constraints nullable="true" foreignKeyName="fk_certreq_member" references="identifier(id)"/>
            </column>
            <column name="subject_name" type="VARCHAR(1024)" remarks="Distinguished Name (DN) used in the CSR.">
                <constraints nullable="false"/>
            </column>
            <column name="subject_alternative_name" type="TEXT" remarks="Subject Alternative Name (SAN) extension used in the CSR."/>
            <column name="certificate_profile" type="VARCHAR(1024)" remarks="Fully qualified class name of the certificate profile used."/>
        </createTable>
    </changeSet>

    <changeSet id="add-fk-keyconf_cert_requests-to-keys" author="niis">
        <addForeignKeyConstraint baseColumnNames="key_id"
                                 baseTableName="keyconf_cert_requests"
                                 constraintName="fk_certreq_key"
                                 referencedColumnNames="id"
                                 referencedTableName="keyconf_keys"
                                 onDelete="CASCADE"/>
    </changeSet>

</databaseChangeLog>
