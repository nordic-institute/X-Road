<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.19.xsd">

    <changeSet author="niis" id="005-create-set-timestamps-function">
        <sql splitStatements="false"><![CDATA[
            CREATE OR REPLACE FUNCTION set_timestamps()
            RETURNS TRIGGER
            LANGUAGE plpgsql
            AS $$
            DECLARE
                now_ts TIMESTAMP := CURRENT_TIMESTAMP;
            BEGIN
                IF TG_OP = 'INSERT' THEN
                    NEW.created_at := now_ts;
                END IF;
                NEW.updated_at := now_ts;
            RETURN NEW;
            END;
            $$;
            ]]></sql>
    </changeSet>

    <changeSet author="niis" id="005-configuration-properties">
        <createTable tableName="configuration_properties">
            <column name="id" autoIncrement="true" type="SERIAL">
                <constraints primaryKey="true"/>
            </column>
            <column name="property_key" type="VARCHAR(1024)">
                <constraints nullable="false"/>
            </column>
            <column name="property_value" type="VARCHAR(4096)">
                <constraints nullable="false"/>
            </column>
            <column name="scope" type="VARCHAR(255)"/>
            <column name="created_at" type="TIMESTAMP(6) WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="updated_at" type="TIMESTAMP(6) WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <sql splitStatements="false"><![CDATA[
            CREATE UNIQUE INDEX uniq_key ON configuration_properties(property_key)
                WHERE scope IS NULL;
            CREATE UNIQUE INDEX uniq_key_scope ON configuration_properties(property_key, scope)
                WHERE scope IS NOT NULL;
        ]]></sql>
        <sql splitStatements="false"><![CDATA[
            DROP TRIGGER IF EXISTS set_timestamps ON configuration_properties;
            CREATE TRIGGER set_timestamps BEFORE INSERT OR UPDATE ON configuration_properties
                FOR EACH ROW EXECUTE FUNCTION set_timestamps();
        ]]></sql>
        <sql splitStatements="false"><![CDATA[
            DROP TRIGGER IF EXISTS update_history ON configuration_properties;
            CREATE TRIGGER update_history AFTER INSERT OR UPDATE OR DELETE ON configuration_properties
                FOR EACH ROW EXECUTE PROCEDURE add_history_rows();
        ]]></sql>
    </changeSet>

</databaseChangeLog>
