import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id("java")
    id("application")
    alias(libs.plugins.shadow)
}

configurations {
    sqlDependencies

    configureEach {
        exclude group: 'org.eclipse.edc', module: 'jetty-core'
    }
}

dependencies {
    implementation libs.websocket.jakarta.server

    implementation libs.edc.control.plane.api.client
    implementation libs.edc.control.plane.api
    implementation libs.edc.control.plane.core
    implementation libs.edc.dsp
    implementation libs.edc.configuration.filesystem
    implementation libs.edc.vault.filesystem
    implementation libs.edc.management.api
    implementation libs.edc.transfer.data.plane

    implementation libs.edc.data.plane.selector.api
    implementation libs.edc.data.plane.selector.core

    implementation libs.edc.data.plane.control.api
    implementation libs.edc.data.plane.public.api
    implementation libs.edc.data.plane.core
    implementation libs.edc.data.plane.http

    implementation libs.edc.identity.trust.core
    implementation libs.edc.identity.did.core
    implementation libs.edc.identity.did.web

    // sql store
    sqlDependencies libs.bundles.edc.sql.store

    // x-road extensions
    implementation(project(":security-server:edc:extensions:xroad-messagelog")) {
        exclude group: 'org.eclipse.jetty'
    }
    implementation(project(":security-server:edc:extensions:xroad-payload-signer")) {
        exclude group: 'org.eclipse.jetty'
    }
    implementation(project(":security-server:edc:extensions:xroad-edr"))
    implementation(project(":security-server:edc:extensions:xroad-identity-and-trust"))
    implementation(project(":security-server:edc:extensions:xroad-webserver"))

    testImplementation libs.edc.junit
}

application {
    mainClass.set("org.eclipse.edc.boot.system.runtime.BaseRuntime")
}


var distTar = tasks.named("distTar")
var distZip = tasks.named("distZip")

shadowJar {
    mergeServiceFiles()
    archiveFileName.set("edc-connector-inmemory.jar")
    dependsOn(distTar, distZip)
}

tasks.register('shadowJarWithSql', ShadowJar) {
    configurations = [project.configurations.runtimeClasspath, project.configurations.sqlDependencies]
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
    archiveFileName.set("edc-connector.jar")
    manifest {
        attributes 'Main-Class': 'org.eclipse.edc.boot.system.runtime.BaseRuntime'
    }
    mergeServiceFiles()
    dependsOn(distTar, distZip)
}

assemble.dependsOn("shadowJarWithSql")
