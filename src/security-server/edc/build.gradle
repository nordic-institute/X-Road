import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id("java")
    id("application")
    id("com.github.johnrengelman.shadow")
}

configurations {
    sqlDependencies
}

dependencies {
    implementation("org.eclipse.edc:control-plane-api-client:$edcVersion")
    implementation("org.eclipse.edc:control-plane-api:$edcVersion")
    implementation("org.eclipse.edc:control-plane-core:$edcVersion")
    implementation("org.eclipse.edc:dsp:$edcVersion")
    implementation("org.eclipse.edc:configuration-filesystem:$edcVersion")
    implementation("org.eclipse.edc:vault-filesystem:$edcVersion")
    implementation("org.eclipse.edc:iam-mock:$edcVersion")
    implementation("org.eclipse.edc:management-api:$edcVersion")
    implementation("org.eclipse.edc:transfer-data-plane:$edcVersion")
    implementation("org.eclipse.edc:transfer-pull-http-receiver:$edcVersion")

    implementation("org.eclipse.edc:data-plane-selector-api:$edcVersion")
    implementation("org.eclipse.edc:data-plane-selector-core:$edcVersion")
//    implementation("org.eclipse.edc:data-plane-selector-client:$edcVersion")

    implementation("org.eclipse.edc:data-plane-control-api:$edcVersion")
    implementation("org.eclipse.edc:data-plane-public-api:$edcVersion")
    implementation("org.eclipse.edc:data-plane-core:$edcVersion")
    implementation("org.eclipse.edc:data-plane-http:$edcVersion")

    // sql store
    sqlDependencies("org.postgresql:postgresql:$postgresqlVersion")
    sqlDependencies("org.eclipse.edc:sql-pool-apache-commons:$edcVersion")
    // without 'transaction-local' db connections are not returned to the pool and eventually edc stops working.
    sqlDependencies("org.eclipse.edc:transaction-local:$edcVersion")
    sqlDependencies("org.eclipse.edc:asset-index-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:data-plane-instance-store-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:data-plane-store-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:contract-definition-store-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:contract-negotiation-store-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:policy-definition-store-sql:$edcVersion")
    sqlDependencies("org.eclipse.edc:transfer-process-store-sql:$edcVersion")

    // x-road extensions
    implementation(project(":security-server:edc:extensions:xroad-messagelog"))
    implementation(project(":security-server:edc:extensions:xroad-payload-signer"))

    testImplementation("org.eclipse.edc:junit:$edcVersion")
}

application {
    mainClass.set("org.eclipse.edc.boot.system.runtime.BaseRuntime")
}


var distTar = tasks.named("distTar")
var distZip = tasks.named("distZip")

shadowJar {
    mergeServiceFiles()
    archiveFileName.set("connector-inmemory.jar")
    dependsOn(distTar, distZip)
}

tasks.register('shadowJarWithSql', ShadowJar) {
    configurations = [project.configurations.runtimeClasspath, project.configurations.sqlDependencies]
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
    archiveFileName.set("connector.jar")
    manifest {
        attributes 'Main-Class': 'org.eclipse.edc.boot.system.runtime.BaseRuntime'
    }
    mergeServiceFiles()
    dependsOn(distTar, distZip)
}

assemble.dependsOn("shadowJarWithSql")
