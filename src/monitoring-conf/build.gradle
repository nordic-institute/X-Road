project.ext.schemaTargetDir = new File("$buildDir/generated-sources")

configurations {
    xjc
}

sourceSets {
    main {
        java.srcDirs = ["src/main/java", "$buildDir/generated-sources"]
        resources.srcDirs = ['src/main/resources', '../common/common-util/src/main/resources']
        resources.exclude 'version.properties'
    }
}

dependencies {
    implementation project(':common:common-util')
    implementation project(':common:common-verifier')

    xjc "org.glassfish.jaxb:jaxb-xjc:$jaxbVersion"
    xjc "org.glassfish.jaxb:jaxb-runtime:$jaxbVersion"
}

tasks.register('createDirs') {
    doLast {
        project.ext.schemaTargetDir.mkdirs()
    }
}

tasks.register('xjc') {
    inputs.files fileTree(dir: 'src/main/resources', include: '*.xsd')
    outputs.dir schemaTargetDir

    doLast {
        ant.taskdef(name: 'xjc',
            classname: 'com.sun.tools.xjc.XJCTask',
            classpath: configurations.xjc.asPath)
        ant.xjc(
            destdir: project.ext.schemaTargetDir,
            package: 'ee.ria.xroad.common.conf.globalconf.monitoringparameters',
            schema: "${buildDir}/resources/main/monitoring-conf.xsd",
            binding: "${buildDir}/resources/main/identifiers-bindings.xml"
        )
    }
}

xjc.dependsOn createDirs
xjc.dependsOn processResources
xjc.mustRunAfter processResources

compileJava.dependsOn xjc
compileJava.dependsOn processResources
