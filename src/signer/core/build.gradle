plugins {
    id("xroad.java-conventions")
    id("xroad.int-test-conventions")
    id 'java-library'
}

project.ext.schemaTargetDir = layout.buildDirectory.dir("generated-sources").get().asFile

configurations {
    xjc
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', schemaTargetDir]
    }
    intTest {
        resources {
            srcDir '../../common/common-int-test/src/main/resources/'
        }
    }
}

dependencies {
    api(platform(libs.springBoot.bom))

    implementation project(':common:common-core')
    implementation project(':common:common-jetty')
    implementation project(":lib:globalconf-spring")
    implementation project(':common:common-rpc')
    implementation project(':signer-protocol')

    api("org.springframework:spring-context-support")
    // Necessary since there are jars with no adequate Maven dependencies
    api fileTree(dir: '../../libs/pkcs11wrapper', include: '*.jar')

    testImplementation project(':common:common-test')
//    testImplementation project(path: ':common:common-verifier', configuration: 'testArtifacts')

    testImplementation libs.mockito.core
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    intTestRuntimeOnly project(':addons:hwtoken')
    intTestImplementation project(":common:common-test")
    intTestImplementation project(":common:common-int-test")

    xjc libs.bundles.jaxb
}

jar {
    archiveBaseName = 'signer-core'
}

tasks.register('createDirs') {
    doLast {
        project.ext.schemaTargetDir.mkdirs()
    }
}

tasks.register('xjc') {
    dependsOn(':common:common-domain:xjc', ':lib:globalconf-model:xjc')
    inputs.files files('src/main/resources/*.xsd')
    outputs.dir project.ext.schemaTargetDir

    doLast {
        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xjc.asPath)

        ant.xjc(
            destdir: project.ext.schemaTargetDir,
            package: 'ee.ria.xroad.common.conf.keyconf',
            schema: 'src/main/resources/keyconf.xsd',
            binding: '../../common/common-domain/src/main/resources/identifiers-bindings.xml'
        )
    }
}

xjc.dependsOn createDirs
compileJava.dependsOn xjc

tasks.register('intTest', Test) {
    useJUnitPlatform()

    setDescription("Runs integration tests.")
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    def intTestArgs = []
    if (project.hasProperty('intTestProfilesInclude')) {
        intTestArgs += "-Dspring.profiles.include=" + project.getProperty('intTestProfilesInclude')
    }

    jvmArgs intTestArgs

    testLogging {
        showStackTraces(true)
        showExceptions(true)
        showCauses(true)
        showStandardStreams(true)
    }
    reports {
        junitXml.includeSystemOutLog = false // defaults to true
    }
}

tasks.named('check') {
    dependsOn tasks.named('intTest')
}
