{
  "action": {
    "activate": "Activate",
    "add": "Add",
    "addClient": "Add client",
    "addMember": "Add member",
    "addSubsystem": "Add subsystem",
    "cancel": "Cancel",
    "close": "Close",
    "confirm": "Confirm",
    "continue": "Continue",
    "copy": "Copy",
    "copyId": "Copy ID",
    "deactivate": "Disable",
    "delete": "Delete",
    "done": "Done",
    "download": "Download",
    "edit": "Edit",
    "emptySearch": "Your search for {msg} found no results.",
    "export": "Export",
    "finish": "Finish",
    "goToFront": "Go to the front page",
    "next": "Next",
    "no": "No",
    "noData": "No data",
    "ok": "Ok",
    "previous": "Previous",
    "refresh": "Refresh",
    "register": "Register",
    "remove": "Remove",
    "removeAll": "Remove All",
    "restore": "Restore",
    "save": "Save",
    "search": "Search",
    "searching": "Searching...",
    "submit": "Submit",
    "unregister": "Unregister",
    "upload": "Upload",
    "yes": "Yes"
  },
  "alert": {
    "count": "Amount of same errors:",
    "id": "ID"
  },
  "apiKey": {
    "createApiKey": {
      "button": "CREATE API KEY",
      "step": {
        "keyDetails": {
          "apiKey": "API key",
          "apiKeyID": "API key ID",
          "assignedRoles": "Roles assigned",
          "createKeyButton": "Create Key",
          "name": "Key Details",
          "note": "NOTE: save the API key in a secure place. The API key is visible only at the time of key generation. It will not be presented again and cannot be retrieved later."
        },
        "roles": {
          "description": "Please select the roles associated with the API key. The roles define the permissions granted to the API key.",
          "name": "Roles",
          "selectRoles": "Select roles"
        }
      },
      "success": "API key successfully created",
      "title": "Create API key"
    },
    "edit": {
      "roleRemoveOnly": "(remove only)"
    },
    "role": {
      "XROAD_REGISTRATION_OFFICER": "Registration Officer",
      "XROAD_SECURITY_OFFICER": "Security Officer",
      "XROAD_SYSTEM_ADMINISTRATOR": "System Administrator"
    },
    "table": {
      "action": {
        "edit": {
          "button": "Edit",
          "dialog": {
            "message": "Roles associated with the API key:",
            "title": "Edit API Key (ID: {id})"
          },
          "success": "API key with ID {id} saved"
        },
        "revoke": {
          "button": "Revoke key",
          "confirmationDialog": {
            "message": "Are you sure you want to revoke the API key with ID {id}?",
            "title": "Are you sure?"
          },
          "success": "API key with ID {id} successfully revoked"
        }
      },
      "header": {
        "id": "ID",
        "roles": "Roles"
      }
    }
  },
  "backup": {
    "createBackup": {
      "button": "Back up config.",
      "messages": {
        "localConfWarning": "Warning! The file “/etc/xroad/services/local.conf” used for configuration overrides is deprecated and not included in the backups anymore. The file “/etc/xroad/services/local.properties” should be used instead.",
        "success": "Backup {file} successfully created"
      }
    },
    "deleteBackup": {
      "dialog": {
        "confirmation": "Are you sure you want to delete backup {file}?",
        "title": "Are you sure?"
      },
      "success": "Backup {file} deleted"
    },
    "restoreFromBackup": {
      "dialog": {
        "confirmation": "Are you sure you want to restore from {file}?",
        "title": "Are you sure?"
      },
      "success": "Configuration restored from {file}"
    },
    "uploadBackup": {
      "button": "Upload backup",
      "confirmationDialog": {
        "confirmation": "File {name} already exists, are you sure you want to overwrite it?",
        "title": "File already exists"
      },
      "success": "Backup {file} uploaded successfully"
    }
  },
  "cert": {
    "certificate": "Certificate",
    "ecParameters": "EC Public Key Parameters",
    "ecPoint": "EC Public Key Point",
    "hashInfo": "Hash (SHA-256)",
    "keyUsage": {
      "CRL_SIGN": "CRL Sign",
      "DATA_ENCIPHERMENT": "Data Encipherment",
      "DECIPHER_ONLY": "Decipher Only",
      "DIGITAL_SIGNATURE": "Digital Signature",
      "ENCIPHER_ONLY": "Encipher Only",
      "KEY_AGREEMENT": "Key Agreement",
      "KEY_CERT_SIGN": "Certificate Sign",
      "KEY_ENCIPHERMENT": "Key Encipherment",
      "NON_REPUDIATION": "Non Repudiation"
    },
    "rsaExp": "RSA Public Key Exponent",
    "rsaModulus": "RSA Public Key Modulus"
  },
  "error_code": {
    "api_key_not_found": "API key not found",
    "backup_file_not_found": "Backup was not found",
    "backup_generation_failed": "Failed to generate backup",
    "backup_restore_interrupted": "Backup restoration has been interrupted",
    "generate_backup_interrupted": "Backup generation has been interrupted",
    "internal_error": "Internal error. See server logs for more details",
    "invalid_backup_file": "Invalid backup file",
    "invalid_distinguished_name": "Distinguished name is invalid",
    "invalid_filename": "Invalid filename",
    "resource_read_failed": "Failed to read resource",
    "restore_process_failed": "Restore process failed",
    "token_fetch_failed": "Error getting tokens.",
    "token_not_found": "Token not found.",
    "validation_failure": "Validation failure"
  },
  "fields": {
    "code": "Code",
    "description": "Description",
    "memberClass": "Member Class",
    "password": "Password",
    "securityServerCode": "Security Server Code",
    "shared": "sharedlib",
    "username": "LIB-Username"
  },
  "footer": {
    "copyright": {
      "company": "Nordic Institute for Interoperability Solutions (NIIS)",
      "licenceInfo": "Licence info",
      "title": "Copyright"
    },
    "software": {
      "feedback": "Feedback",
      "title": "Software",
      "versionPrefix": "X-Road"
    }
  },
  "global": {
    "all": "All",
    "name": "Name"
  },
  "keys": {
    "gotIt": "Got it"
  },
  "locals_demo": "This is localised in library",
  "login": {
    "errorMsg401": "Wrong username or password",
    "generalError": "Login failed. Please try again.",
    "logIn": "Log in",
    "logOut": "Log out"
  },
  "logout": {
    "idleWarning": "You have been idle for 30 minutes and your session has expired. For security reasons, you will be logged out.",
    "sessionExpired": "Session expired"
  },
  "meta": {
    "check_signer_logs": "Please check the signer log for details."
  },
  "noData": {
    "loading": "Loading... Please wait",
    "noBackups": "No backups yet",
    "noCertificate": "No certificate",
    "noCertificates": "No certificates",
    "noData": "No data",
    "noMatches": "No items matching criteria",
    "noServices": "No services",
    "noTokens": "No tokens"
  },
  "type": "Type",
  "validation": {
    "messages": {
      "address": "The {field} field contains invalid characters"
    }
  },
  "validationError": {
    "AssertFalse": "value should be 'false'",
    "AssertTrue": "value should be 'true'",
    "DecimalMax": "numeric value exceeds the maximum allowed",
    "DecimalMin": "numeric value is under the minimum allowed",
    "Digits": "value should contain only digits",
    "Email": "value does not meet the email format",
    "Future": "datetime value should be in the future",
    "FutureOrPresent": "datetime value should be now or in the future",
    "Max": "numeric value exceeds the maximum allowed",
    "Min": "numeric value is under the minimum allowed",
    "Negative": "numeric value should be less than zero",
    "NegativeOrZero": "numeric value should be less or equal to zero",
    "NoBackslashes": "value should not contain backslash (\\) symbols",
    "NoColons": "value should not contain colon (:) symbols",
    "NoForwardslashes": "value should not contain forward slash (/) symbols",
    "NoPercents": "value should not contain percentage (%) symbols",
    "NoSemicolons": "value should not contain semicolon (;) symbols",
    "Normalized": "value should be normalized",
    "NotBlank": "value should not be blank",
    "NotEmpty": "value should not be empty",
    "NotNull": "value is required",
    "Null": "value should not be set",
    "Past": "datetime value should be in the past",
    "PastOrPresent": "datetime value should be now or in the past",
    "Pattern": "value did not match the required format",
    "Positive": "numeric value should be greater that zero",
    "PositiveOrZero": "numeric value should be greater or equal to zero",
    "Size": "value does not meet length requirements",
    "ValidHostAddress": "Valid fully qualified domain name (e.g. host.example.org) or public IP address (eg. 192.168.123.123) needed",
    "ValidHostAddressField": "Valid IP address or fully qualified domain name needed"
  },
  "warning": "Warning"
}
