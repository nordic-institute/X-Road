<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://x-road.eu/xsd/op-monitoring.xsd"
           elementFormDefault="qualified"
           xmlns="http://x-road.eu/xsd/op-monitoring.xsd"
           xmlns:id="http://x-road.eu/xsd/identifiers"
           xmlns:ref="http://ws-i.org/profiles/basic/1.1/xsd">
    <xs:import namespace="http://x-road.eu/xsd/identifiers"
               schemaLocation="identifiers.xsd" id="id"/>
    <xs:import namespace="http://ws-i.org/profiles/basic/1.1/xsd"
               schemaLocation="swaref.xsd" id="ref"/>
    <xs:complexType name="GetSecurityServerOperationalDataType">
        <xs:annotation>
            <xs:documentation>Security server operational data request</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="searchCriteria" type="SearchCriteriaType">
                <xs:annotation>
                    <xs:documentation>Search criteria</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="outputSpec" type="OutputSpecType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The set of the requested operational data fields</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="SearchCriteriaType">
        <xs:sequence>
            <xs:element name="recordsFrom" type="xs:long">
                <xs:annotation>
                    <xs:documentation>The beginning of the time interval of requested operational data (Unix timestamp in seconds)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="recordsTo" type="xs:long">
                <xs:annotation>
                    <xs:documentation>The end of the time interval of requested operational data (Unix timestamp in seconds)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="client" type="id:XRoadClientIdentifierType"
                     minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Client identifier of data exchange partner to use for filtering out records</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OutputSpecType">
        <xs:sequence>
            <xs:element name="outputField" type="xs:string"
                        minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Name of the operational data field</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="GetSecurityServerOperationalDataResponseType">
        <xs:annotation>
            <xs:documentation>Security server operational data response</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="recordsCount" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The number of records included in the response</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="records" type="ref:swaRef">
                <xs:annotation>
                    <xs:documentation>The reference to the attachment containing the records</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="nextRecordsFrom" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Unix timestamp in seconds to use for field recordsFrom of the next query. This element is present in case the size of the response has been limited or the timestamp of the field recordsTo was in the future.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FilterCriteriaType">
        <xs:sequence>
            <xs:element name="client" type="id:XRoadClientIdentifierType"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Client identifier of data exchange partner to use for filtering out services</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="GetSecurityServerHealthDataType">
        <xs:annotation>
            <xs:documentation>Security server health data request</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="filterCriteria" type="FilterCriteriaType" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Filter criteria</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="GetSecurityServerHealthDataResponseType">
        <xs:annotation>
            <xs:documentation>Security server health data response</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="monitoringStartupTimestamp" type="xs:long">
                <xs:annotation>
                    <xs:documentation>The Unix timestamp in milliseconds when the operational monitoring daemon was started</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="statisticsPeriodSeconds" type="xs:int">
                <xs:annotation>
                    <xs:documentation>Duration of the statistics period in seconds</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="servicesEvents" type="ServicesEventsType">
                <xs:annotation>
                    <xs:documentation>Health data of all services</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ServicesEventsType">
        <xs:sequence>
            <xs:element name="serviceEvents" type="ServiceEventsType"
                        minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Health data of one service</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ServiceEventsType">
        <xs:sequence>
            <xs:element name="service" type="id:XRoadServiceIdentifierType">
                <xs:annotation>
                    <xs:documentation>The service identifier</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lastSuccessfulRequestTimestamp" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The timestamp of the last successful request (Unix timestamp in milliseconds)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lastUnsuccessfulRequestTimestamp" type="xs:long"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The timestamp of the last unsuccessful request (Unix timestamp in milliseconds)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="serviceType" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Type of the service</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="lastPeriodStatistics" type="LastPeriodStatisticsType">
                <xs:annotation>
                    <xs:documentation>The statistics of the requests occurred during the last period</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="LastPeriodStatisticsType">
        <xs:sequence>
            <xs:element name="successfulRequestCount" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The number of successful requests occurred during the last period</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="unsuccessfulRequestCount" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The number of unsuccessful requests occurred during the last period</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMinDuration" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The minimum duration of the request in milliseconds</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestAverageDuration" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The average duration of the request in milliseconds</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMaxDuration" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The maximum duration of the request in milliseconds</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestDurationStdDev" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The standard deviation of the duration of the requests</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMinSize" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The minimum message size of the request in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestAverageSize" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The average message size of the request in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestMaxSize" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The maximum message size of the request in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="requestSizeStdDev" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The standard deviation of the message size of the request</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="responseMinSize" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The minimum message size of the response in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="responseAverageSize" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The average message size of the response in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="responseMaxSize" type="xs:long" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The maximum message size of the response in bytes</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="responseSizeStdDev" type="xs:double"
                        minOccurs="0">
                <xs:annotation>
                    <xs:documentation>The standard deviation of the message size of the response</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="getSecurityServerOperationalData"
                type="GetSecurityServerOperationalDataType"/>
    <xs:element name="getSecurityServerOperationalDataResponse"
                type="GetSecurityServerOperationalDataResponseType"/>
    <xs:element name="getSecurityServerHealthData"
                type="GetSecurityServerHealthDataType"/>
    <xs:element name="getSecurityServerHealthDataResponse"
                type="GetSecurityServerHealthDataResponseType"/>
</xs:schema>
