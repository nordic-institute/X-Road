/*
 * The MIT License
 * Copyright (c) 2019- Nordic Institute for Interoperability Solutions (NIIS)
 * Copyright (c) 2018 Estonian Information System Authority (RIA),
 * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)
 * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

package org.niis.xroad.monitor.common;

option java_multiple_files = true;

service MonitorService {
  rpc GetStats(StatsReq) returns (StatsResp) {}
}

service MetricsService {
  rpc GetMetrics(SystemMetricsReq) returns (SystemMetricsResp) {}
}

/*
 * Request for system stats
 */
message StatsReq {
  //currently empty
}

/*
 * System statistics response
 *
 * see com.sun.management.UnixOperatingSystemMXBean
 */
message StatsResp{
  int64 open_file_descriptor_count = 1;
  int64 max_file_descriptor_count = 2;
  double system_cpu_load = 3;
  int64 committed_virtual_memory_size = 4;
  int64 free_physical_memory_size = 5;
  int64 total_physical_memory_size = 6;
  int64 free_swap_space_size = 7;
  int64 total_swap_space_size = 8;
}

message SystemMetricsReq {
  repeated string metric_names = 1;
  bool is_client_owner = 2;
}

message SystemMetricsResp {
   MetricsGroup metrics = 1;
}

message Metrics {
  oneof value {
    MetricsGroup metrics_group = 1;
    SingleMetrics single_metrics = 2;
    HistogramMetrics single_histogram = 3;
  }
}

message MetricsGroup {
  string  name = 1;
  repeated Metrics metrics = 2;
}

message SingleMetrics {
  string name = 1;
  optional string value = 2;
}

message HistogramMetrics {
  string  name = 1;
  // The date/time when data was last updated
  google.protobuf.Timestamp update_date_time = 2;
  double distribution_75th_percentile = 3;
  double distribution_95th_percentile = 4;
  double distribution_98th_percentile = 5;
  double distribution_99th_percentile = 6;
  double distribution_999th_percentile = 7;
  double max = 8;
  double mean = 9;
  double median = 10;
  double min = 11;
  double std_dev = 12;
}
