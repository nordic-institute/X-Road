--- 
- name: Copy single JAR file to server modules [{{selected_modules}}]
  copy:
    src: "../src/{{ modules[item].dir }}/build/libs/{{ modules[item].lib }}"
    dest: "{{ modules[item].target }}"
  when: item in modules and modules[item].lib is defined
  with_items: "{{selected_modules.split(',')}}"

- name: Copy Quarkus app folder to server modules [{{selected_modules}}]
  block:
    - name: Archive the Quarkus app folder
      archive:
        path: "../src/{{ modules[item].dir }}/build/quarkus-app/"
        dest: "/tmp/{{ item }}.tar"
        format: tar
      delegate_to: localhost  # Ensure this runs on the control machine
      when: item in modules and modules[item].lib is not defined
      with_items: "{{ selected_modules.split(',') }}"

    - name: Copy the archive to the target
      copy:
        src: "/tmp/{{ item }}.tar"
        dest: "/tmp/{{ item }}.tar"
      when: item in modules and modules[item].lib is not defined
      with_items: "{{ selected_modules.split(',') }}"

    - name: Extract the archive on the target
      unarchive:
        src: "/tmp/{{ item }}.tar"
        dest: "{{ modules[item].target }}/"
        remote_src: yes  # Archive is already on the target
      when: item in modules and modules[item].lib is not defined
      with_items: "{{ selected_modules.split(',') }}"

- name: Restart updated service [{{selected_modules}}]
  service:
    name: "{{modules[item].service}}"
    state: restarted
    enabled: yes
  when: item in modules
  with_items: "{{selected_modules.split(',')}}"
  tags: restart-services

  
  

 
  

