---
- assert:
      that:
          - "{{ ( ansible_distribution | lower ) in ['ubuntu','redhat','rocky'] }}"

- name: test postgres version
  become_user: postgres
  become: yes
  shell: |
    psql --no-align --tuples-only -c "SELECT current_setting('server_version_num');"
  register: postgres_version

- set_fact:
    postgresql_version_num_full: "{{ (postgres_version.stdout) | int }}"
    postgresql_major_version: "{{ (postgres_version.stdout[:-4]) | int }}"

- name: ensure that acl utilities is installed
  # see https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user 
  package:
      name: acl
      state: present

- name: check node.ini
  stat: path=/etc/xroad/conf.d/node.ini
  register: node_ini

- name: stop services
  service:
      name: "{{ item }}"
      state: stopped
  with_items:
      - xroad-proxy
      - xroad-confclient
      - xroad-signer
      - xroad-proxy-ui-api
  when: not node_ini.stat.exists
  register: services_stopped

# missing node ini means initial installation. stop services

- name: create db config folder
  file:
      path: /etc/xroad/postgresql
      owner: root
      group: postgres
      mode: 0750
      state: directory

- name: fix config folder permissions
  file:
      path: /etc/xroad
      owner: xroad
      group: xroad
      mode: 0751
      state: directory

- name: copy postgresql certificates
  copy:
      src: "{{ item }}"
      dest: "/etc/xroad/postgresql/"
      owner: postgres
      group: postgres
      mode: 0400
  with_items:
      - "ca/ca.crt"
      - "ca/{{ nodename }}/server.crt"
      - "ca/{{ nodename }}/server.key"

- name: setup serverconf database
  include_tasks: "{{ ansible_distribution | lower }}.yml"

- name: disable connection keep-alives
  ini_file:
      dest: /etc/xroad/conf.d/local.ini
      section: proxy
      option: server-support-clients-pooled-connections
      value: false

- name: enable health check
  ini_file:
      dest: /etc/xroad/conf.d/local.ini
      section: proxy
      option: health-check-port
      value: "{{ xroad_proxy_health_check_port }}"

- name: configure db properties
  ini_file:
      dest: "/etc/xroad/db.properties"
      section: null
      option: "{{ item.option }}"
      value: "{{ item.value }}"
  with_items:
      - {option: 'serverconf.hibernate.connection.url', value: 'jdbc:postgresql://127.0.0.1:{{ serverconf_db_port }}/serverconf'}
      - {option: 'serverconf.hibernate.connection.password', value: '{{ serverconf_password }}'}

- name: ensure that rsync is installed
  package:
      name: rsync
      state: present
