services:
  openbao:
    build:
      context: ../docker/openbao
    environment:
      - BAO_ADDR=http://0.0.0.0:8200
      - BAO_DEV_ROOT_TOKEN_ID=${XROAD_SECRET_STORE_TOKEN}
    healthcheck:
      interval: 5s
      retries: 40
      test: ["CMD", "sh", "-c", "bao secrets list -format=json | jq 'has(\"xrd-pki/\")' | grep -q true"]
    networks:
      - xrd-ss-network
    volumes:
      - ../../../src/packages/src/xroad/common/xroad-secret-store-local/usr/share/xroad/scripts/:/scripts
  db-serverconf:
    image: postgres:17
    environment:
      - POSTGRES_PASSWORD=secret #TODO use separate users for runtime and admin see: https://hub.docker.com/_/postgres
      - POSTGRES_USER=serverconf
    networks:
      - xrd-ss-network
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "pg_isready", "-d", "serverconf", "-U", "serverconf" ]
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 256M
  db-messagelog:
    image: postgres:17
    environment:
      - POSTGRES_PASSWORD=secret #TODO use separate users
      - POSTGRES_USER=messagelog
    networks:
      - xrd-ss-network
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "pg_isready", "-d", "messagelog", "-U", "messagelog" ]
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 256M
  db-serverconf-init:
    image: ${SERVERCONF_INIT_IMG}
    pull_policy: always
    environment:
      - LIQUIBASE_COMMAND_USERNAME=serverconf
      - LIQUIBASE_COMMAND_PASSWORD=secret
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://db-serverconf:5432/serverconf
      - db_user=serverconf
      - db_schema=public
    depends_on:
      - db-serverconf
    networks:
      - xrd-ss-network
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 512M
  db-messagelog-init:
    image: ${MESSAGELOG_INIT_IMG}
    pull_policy: always
    environment:
      - LIQUIBASE_COMMAND_USERNAME=messagelog
      - LIQUIBASE_COMMAND_PASSWORD=secret
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://db-messagelog:5432/messagelog
      - db_user=messagelog
      - db_schema=public
    depends_on:
      - db-messagelog
    networks:
      - xrd-ss-network
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 512M

  configuration-client:
    image: ${CONFIGURATION_CLIENT_IMG}
    pull_policy: always
    environment:
      - XROAD_HOST=configuration-client
      - XROAD_SECRET_STORE_HOST=openbao
      - XROAD_SECRET_STORE_TOKEN=${XROAD_SECRET_STORE_TOKEN}
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "curl", "-f", "-k", "http://localhost:4099/q/health" ]
    networks:
      - xrd-ss-network
      - xroad-network
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 320M
    depends_on:
      openbao:
        condition: service_healthy
  monitor:
    image: ${MONITOR_IMG}
    pull_policy: always
    environment:
      - XROAD_HOST=monitor
      - XROAD_SECRET_STORE_HOST=openbao
      - XROAD_SECRET_STORE_TOKEN=${XROAD_SECRET_STORE_TOKEN}
      - XROAD_COMMON_RPC_CHANNEL_CONFIGURATION_CLIENT_HOST=configuration-client
      - XROAD_COMMON_RPC_CHANNEL_SIGNER_HOST=signer
      - XROAD_COMMON_RPC_CHANNEL_PROXY_HOST=proxy
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_URL=jdbc:postgresql://db-serverconf:5432/serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_DRIVER_CLASS=org.postgresql.Driver
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_USERNAME=serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_PASSWORD=secret
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "curl", "-f", "-k", "http://localhost:4099/q/health" ]
    networks:
      - xrd-ss-network
      - xroad-network
    depends_on:
      db-serverconf-init:
        condition: service_completed_successfully
      configuration-client:
        condition: service_healthy
      proxy:
        condition: service_healthy
  signer:
    image: ${SIGNER_IMG}
    pull_policy: always
    environment:
      - XROAD_HOST=signer
      - XROAD_SECRET_STORE_HOST=openbao
      - XROAD_SECRET_STORE_TOKEN=${XROAD_SECRET_STORE_TOKEN}
      - XROAD_COMMON_RPC_CHANNEL_CONFIGURATION_CLIENT_HOST=configuration-client
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "curl", "-f", "-k", "http://localhost:4099/q/health" ]
    networks:
      - xrd-ss-network
      - xroad-network
    depends_on:
      db-serverconf-init:
        condition: service_completed_successfully
      configuration-client:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 320M
  proxy:
    image: ${PROXY_IMG}
    pull_policy: always
    environment:
      - XROAD_HOST=proxy
      - XROAD_SECRET_STORE_HOST=openbao
      - XROAD_SECRET_STORE_TOKEN=${XROAD_SECRET_STORE_TOKEN}
      - XROAD_COMMON_RPC_CHANNEL_CONFIGURATION_CLIENT_HOST=configuration-client
      - XROAD_COMMON_RPC_CHANNEL_SIGNER_HOST=signer
      - XROAD_COMMON_RPC_CHANNEL_ENV_MONITOR_HOST=monitor
      - XROAD_DB_MESSAGELOG_HIBERNATE_CONNECTION_URL=jdbc:postgresql://db-messagelog:5432/messagelog
      - XROAD_DB_MESSAGELOG_HIBERNATE_CONNECTION_DRIVER_CLASS=org.postgresql.Driver
      - XROAD_DB_MESSAGELOG_HIBERNATE_CONNECTION_USERNAME=messagelog
      - XROAD_DB_MESSAGELOG_HIBERNATE_CONNECTION_PASSWORD=secret
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_URL=jdbc:postgresql://db-serverconf:5432/serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_DRIVER_CLASS=org.postgresql.Driver
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_USERNAME=serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_PASSWORD=secret
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "curl", "-f", "-k", "http://localhost:4099/q/health" ]
    networks:
      - xrd-ss-network
      - xroad-network
    depends_on:
      db-serverconf-init:
        condition: service_completed_successfully
      signer:
        condition: service_healthy
    ports:
      - "0:9999" # debug port
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 512M
  ui:
    image: ${PROXY_UI_IMG}
    pull_policy: always
    environment:
      - XROAD_HOST=ui
      - XROAD_SECRET_STORE_HOST=openbao
      - XROAD_SECRET_STORE_TOKEN=${XROAD_SECRET_STORE_TOKEN}
      - XROAD_SECRET_STORE_SCHEME=http
      - XROAD_COMMON_RPC_CHANNEL_CONFIGURATION_CLIENT_HOST=configuration-client
      - XROAD_COMMON_RPC_CHANNEL_SIGNER_HOST=signer
      - XROAD_COMMON_RPC_CHANNEL_PROXY_HOST=proxy
      - XROAD_COMMON_RPC_CHANNEL_ENV_MONITOR_HOST=monitor
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_URL=jdbc:postgresql://db-serverconf:5432/serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_DRIVER_CLASS=org.postgresql.Driver
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_USERNAME=serverconf
      - XROAD_DB_SERVERCONF_HIBERNATE_CONNECTION_PASSWORD=secret
      - XROAD_PROXY_UI_API_SECURITY_SERVER_URL=https://proxy:8443
    ports:
      - "0:4000" # Frontend
      - "0:9999" # debug port
    healthcheck:
      interval: 5s
      retries: 40
      test: [ "CMD", "curl", "-f", "-k",  "https://localhost:4000/actuator/health" ] #TODO verify that endpoint returns 200
    networks:
      - xrd-ss-network
      - xroad-network
    depends_on:
      db-serverconf-init:
        condition: service_completed_successfully
      signer:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          memory: 64M
        limits:
          memory: 512M

networks:
  xroad-network:
    name: xroad-network
    external: true
  xrd-ss-network:
    driver: bridge
